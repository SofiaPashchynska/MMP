import numpy as np
from scipy import optimize
from scipy.misc import derivative
import math

x0 = 2.8
y0 = 1
delta = 0.1

def f1(x):
    return 0.8-math.cos(x-1) 
def f2 (y):
    return 2+math.cos(y) 

 
def iter (x,y,e):
    xn = x
    yn = y
    xn1 = f2(x)
    yn1 = f1(y)
    n = 1
    while ((abs(xn1-xn)>=e) & (abs(yn1-yn) >=e)):
        xn = xn1
        yn = yn1
        xn1 = f2(yn)
        yn1 = f1(xn)
        n += 1
    print ('Simple iteration:')
    print ('x=', xn, '\ny=',yn,'\nThe amount of iteration = ',n)
iter(x0,y0,0.0001)


def f3(x): 
    return x[0] -2 - math.cos(x[1]) , 0.8-math.cos(x[0] - 1) -x[1]
s = optimize.root(f3, [0.,0.], method = 'hybr') 
print ('Check',s.x)
print ('Check',s.x)
